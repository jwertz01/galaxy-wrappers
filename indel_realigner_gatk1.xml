<tool id="gatk_indel_realigner" name="Indel Realigner" version="0.0.5">
  <description>- perform local realignment</description>
  <requirements>
      <requirement type="package" version="1.3">gatk</requirement>
  </requirements>
<!-- ANN: set the max heap in the java command. 10-4-2011 -->
  <command interpreter="python">gatk_wrapper.py
   ##ANN: commented out, explicitly set max heap instead --max_jvm_heap_fraction "1"
   --max_jvm_heap "8g"
   --stdout "${output_log}"
   -d "-I" "${reference_source.input_bam}" "${reference_source.input_bam.ext}" "gatk_input"
   -d "" "${reference_source.input_bam.metadata.bam_index}" "bam_index" "gatk_input" ##hardcode galaxy ext type as bam_index
   -p 'java 
    -jar "${GALAXY_DATA_INDEX_DIR}/shared/jars/gatk/GenomeAnalysisTK.jar"
    -T "IndelRealigner"
    -o "${output_bam}"
    -et "NO_ET" ##ET no phone home
    ##--num_threads 12 ##hard coded, for now
    ##-log "${output_log}" ##don't use this to log to file, instead directly capture stdout
    #if $reference_source.reference_source_selector != "history":
        -R "${reference_source.ref_file.fields.path}"
    #end if
   -LOD "${lod_threshold}"
    ${knowns_only}
   '
   
    #set $rod_binding_names = dict()
    #for $rod_binding in $rod_bind:
        #if str( $rod_binding.rod_bind_type.rod_bind_type_selector ) == 'custom':
            #set $rod_bind_name = $rod_binding.rod_bind_type.custom_rod_name
        #else
            #set $rod_bind_name = $rod_binding.rod_bind_type.rod_bind_type_selector
        #end if
        #set $rod_binding_names[$rod_bind_name] = $rod_binding_names.get( $rod_bind_name, -1 ) + 1
        -d "-known:${rod_bind_name},%(file_type)s" "${rod_binding.rod_bind_type.input_rod}" "${rod_binding.rod_bind_type.input_rod.ext}" "input_${rod_bind_name}_${rod_binding_names[$rod_bind_name]}"
        #if str( $rod_binding.rod_bind_type.rodToIntervalTrackName ):
            -p '--rodToIntervalTrackName "${rod_bind_name}"'
        #end if
    #end for
   
    ##start standard gatk options
    #if $gatk_param_type.gatk_param_type_selector == "advanced":
        #for $sample_metadata in $gatk_param_type.sample_metadata:
            -p '--sample_metadata "${sample_metadata.sample_metadata_file}"'
        #end for
        #for $read_filter in $gatk_param_type.read_filter:
            -p '--read_filter "${read_filter.read_filter_type.read_filter_type_selector}"
            ###raise Exception( str( dir( $read_filter ) ) )
            #for $name, $param in $read_filter.read_filter_type.iteritems():
                #if $name not in [ "__current_case__", "read_filter_type_selector" ]:
                    --${name} "${param}"
                #end if
            #end for
            '
        #end for
        #for $interval_count, $input_intervals in enumerate( $gatk_param_type.input_interval_repeat ):
            ## ANN: added in the ':${input_intervals.input_intervals.ext}' to the argument due to http://getsatisfaction.com/gsa/topics/gatk_v1_3_and_bed_interval_file_must_be_parsed_through_tribble'
            -d "--intervals:${input_intervals.input_intervals.ext}" "${input_intervals.input_intervals}" "${input_intervals.input_intervals.ext}" "input_intervals_${interval_count}"
        #end for
        
        #for $interval_count, $input_intervals in enumerate( $gatk_param_type.input_exclude_interval_repeat ):
            -d "--excludeIntervals" "${input_intervals.input_exclude_intervals}" "${input_intervals.input_exclude_intervals.ext}" "input_exlude_intervals_${interval_count}"
        #end for

        ## ANN: in gatk 1.3 this changed to --interval_set_rule
        ##-p '--BTI_merge_rule "${gatk_param_type.BTI_merge_rule}"'
        -p '--interval_set_rule "${gatk_param_type.BTI_merge_rule}"'
        
        -p '--downsampling_type "${gatk_param_type.downsampling_type.downsampling_type_selector}"'
        #if str( $gatk_param_type.downsampling_type.downsampling_type_selector ) != "NONE":
            -p '--${gatk_param_type.downsampling_type.downsample_to_type.downsample_to_type_selector} "${gatk_param_type.downsampling_type.downsample_to_type.downsample_to_value}"'
        #end if
        -p '
        --baq "${gatk_param_type.baq}"
        --baqGapOpenPenalty "${gatk_param_type.baq_gap_open_penalty}"
        ${gatk_param_type.use_original_qualities}
        --defaultBaseQualities "${gatk_param_type.default_base_qualities}"
        --validation_strictness "${gatk_param_type.validation_strictness}"
        --interval_merging "${gatk_param_type.interval_merging}"
        ${gatk_param_type.disable_experimental_low_memory_sharding}
        ${gatk_param_type.non_deterministic_random_seed}
        '
        #for $rg_black_list_count, $rg_black_list in enumerate( $gatk_param_type.read_group_black_list_repeat ):
            #if $rg_black_list.read_group_black_list_type.read_group_black_list_type_selector == "file":
                -d "--read_group_black_list" "${rg_black_list.read_group_black_list_type.read_group_black_list}" "txt" "input_read_group_black_list_${rg_black_list_count}"
            #else
                -p '--read_group_black_list "${rg_black_list.read_group_black_list_type.read_group_black_list}"'
            #end if
        #end for
    #end if
    #if $reference_source.reference_source_selector == "history":
        -d "-R" "${reference_source.ref_file}" "${reference_source.ref_file.ext}" "gatk_input"
    #end if
    ##end standard gatk options
    ##start analysis specific options
    -d "-targetIntervals" "${target_intervals}" "${target_intervals.ext}" "gatk_target_intervals"
    -p '
    --disable_bam_indexing
    '
    #if $analysis_param_type.analysis_param_type_selector == "advanced":
        -p '
        --entropyThreshold "${analysis_param_type.entropy_threshold}"
        ${analysis_param_type.simplify_bam}
        --consensusDeterminationModel "${analysis_param_type.consensus_determination_model}"
        --maxIsizeForMovement "${analysis_param_type.max_insert_size_for_movement}"
        --maxPositionalMoveAllowed "${analysis_param_type.max_positional_move_allowed}"
        --maxConsensuses "${analysis_param_type.max_consensuses}"
        --maxReadsForConsensuses "${analysis_param_type.max_reads_for_consensuses}"
        --maxReadsForRealignment "${analysis_param_type.max_reads_for_realignment}"
        ${analysis_param_type.no_original_alignment_tags}
        '
    #end if
  </command>
  <inputs>
    
    <conditional name="reference_source">
      <param name="reference_source_selector" type="select" label="Choose the source for the reference list">
        <option value="cached">Locally cached</option>
        <option value="history">History</option>
      </param>
      <when value="cached">
        <param name="input_bam" type="data" format="bam" label="BAM file">
          <validator type="unspecified_build" />
          <validator type="metadata" check="bam_index" message="Metadata missing, click the pencil icon in the history item and use the auto-detect feature to correct this issue."/>
          <validator type="dataset_metadata_in_data_table" table_name="gatk_picard_indexes" metadata_name="dbkey" metadata_column="dbkey" message="Sequences are not currently available for the specified build." /> <!-- fixme!!! this needs to be a select -->
        </param>
        <param name="ref_file" type="select" label="Using reference genome">
          <options from_data_table="gatk_picard_indexes">
            <filter type="data_meta" key="dbkey" ref="input_bam" column="dbkey"/>
          </options>
        </param>
      </when>
      <when value="history"> <!-- FIX ME!!!! -->
        <param name="input_bam" type="data" format="bam" label="BAM file" >
          <validator type="metadata" check="bam_index" message="Metadata missing, click the pencil icon in the history item and use the auto-detect feature to correct this issue."/>
        </param>
        <param name="ref_file" type="data" format="fasta" label="Using reference file">
          <options>
            <filter type="data_meta" key="dbkey" ref="input_bam" /> <!-- FIX ME!!!! -->
          </options>
        </param>
      </when>
    </conditional>
    <param name="target_intervals" type="data" format="gatk_interval,bed,picard_interval_list" label="Restrict realignment to provided intervals" />
    <repeat name="rod_bind" title="Binding for reference-ordered data">
        <conditional name="rod_bind_type">
	      <param name="rod_bind_type_selector" type="select" label="Binding Type">
	        <option value="dbsnp" selected="True">dbSNP</option>
	        <option value="snps">SNPs</option>
	        <option value="indels">INDELs</option>
	        <option value="custom">Custom</option>
	      </param>
          <when value="dbsnp">
              <param name="input_rod" type="data" format="vcf,gatk_dbsnp,bed" label="ROD file" />
              <param name="rodToIntervalTrackName" type="boolean" truevalue="--rodToIntervalTrackName" falsevalue="" label="Use ROD as interval List (-BTI, --rodToIntervalTrackName)" help="Only one ROD may have this option specified" />
          </when>
          <when value="snps">
              <param name="input_rod" type="data" format="vcf,gatk_dbsnp,bed" label="ROD file" />
              <param name="rodToIntervalTrackName" type="boolean" truevalue="--rodToIntervalTrackName" falsevalue="" label="Use ROD as interval List (-BTI, --rodToIntervalTrackName)" help="Only one ROD may have this option specified" />
          </when>
          <when value="indels">
              <param name="input_rod" type="data" format="vcf,gatk_dbsnp,bed" label="ROD file" />
              <param name="rodToIntervalTrackName" type="boolean" truevalue="--rodToIntervalTrackName" falsevalue="" label="Use ROD as interval List (-BTI, --rodToIntervalTrackName)" help="Only one ROD may have this option specified" />
          </when>
          <when value="custom">
              <param name="custom_rod_name" type="text" value="Unknown" label="ROD Name"/>
              <param name="input_rod" type="data" format="vcf,gatk_dbsnp,bed" label="ROD file" />
              <param name="rodToIntervalTrackName" type="boolean" truevalue="--rodToIntervalTrackName" falsevalue="" label="Use ROD as interval List (-BTI, --rodToIntervalTrackName)" help="Only one ROD may have this option specified" />
          </when>
        </conditional>
    </repeat>
    <param name="lod_threshold" type="float" value="5.0" label="LOD threshold above which the realigner will proceed to realign" />
    <param name="knowns_only" type="boolean" checked="False" truevalue="-knownsOnly" falsevalue="" label="Use only known indels provided as RODs"/>
    
    <conditional name="gatk_param_type">
      <param name="gatk_param_type_selector" type="select" label="Basic or Advanced GATK options">
        <option value="basic" selected="True">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        <repeat name="sample_metadata" title="Sample Metadata">
            <param name="sample_metadata_file" type="data" format="txt" label="Sample file in JSON format" />
        </repeat>
        <repeat name="read_filter" title="Read Filter">
            <conditional name="read_filter_type">
		      <param name="read_filter_type_selector" type="select" label="Read Filter Type">
		        <option value="MaxReadLength" selected="True">MaxReadLength</option>
		        <option value="ZeroMappingQualityRead">ZeroMappingQualityRead</option>
		        <option value="NotPrimaryAlignment">NotPrimaryAlignment</option>
		      </param>
	          <when value="ZeroMappingQualityRead">
	              <!-- no extra options -->
	          </when>
	          <when value="NotPrimaryAlignment">
	              <!-- no extra options -->
	          </when>
	          <when value="MaxReadLength">
	              <param name="maxReadLength" type="integer" value="76" label="Max Read Length"/>
	          </when>
            </conditional>
        </repeat>
        <repeat name="input_interval_repeat" title="Operate on Genomic intervals">
          <param name="input_intervals" type="data" format="bed,gatk_interval,picard_interval_list" label="Genomic intervals" />
        </repeat>
        <repeat name="input_exclude_interval_repeat" title="Exclude Genomic intervals">
          <param name="input_exclude_intervals" type="data" format="bed,gatk_interval,picard_interval_list" label="Genomic intervals" />
        </repeat>
        
        <param name="BTI_merge_rule" type="select" label="BTI merge rule">
          <option value="UNION" selected="True">UNION</option>
          <option value="INTERSECTION">INTERSECTION</option>
        </param>
        
        <conditional name="downsampling_type">
          <param name="downsampling_type_selector" type="select" label="Type of reads downsampling to employ at a given locus" help="Downsampling Type">
            <option value="NONE" selected="True">NONE</option>
            <option value="ALL_READS">ALL_READS</option>
            <option value="BY_SAMPLE">BY_SAMPLE</option>
          </param>
          <when value="NONE">
	          <!-- no more options here -->
	      </when>
          <when value="ALL_READS">
	          <conditional name="downsample_to_type">
	              <param name="downsample_to_type_selector" type="select" label="Type of reads downsampling to employ at a given locus" help="Downsampling Type">
	                  <option value="downsample_to_fraction" selected="True">Downsample by Fraction</option>
	                  <option value="downsample_to_coverage">Downsample by Coverage</option>
	              </param>
	              <when value="downsample_to_fraction">
	                  <param name="downsample_to_value" type="float" label="Fraction [0.0-1.0] of reads to downsample to" value="1" min="0" max="1"/>
	              </when>
	              <when value="downsample_to_coverage">
	                  <param name="downsample_to_value" type="integer" label="Coverage to downsample to at any given locus" value="0"/>
	              </when>
	          </conditional>
	      </when>
          <when value="BY_SAMPLE">
	          <conditional name="downsample_to_type">
	              <param name="downsample_to_type_selector" type="select" label="Type of reads downsampling to employ at a given locus" help="Downsampling Type">
	                  <option value="downsample_to_fraction" selected="True">Downsample by Fraction</option>
	                  <option value="downsample_to_coverage">Downsample by Coverage</option>
	              </param>
	              <when value="downsample_to_fraction">
	                  <param name="downsample_to_value" type="float" label="Fraction [0.0-1.0] of reads to downsample to" value="1" min="0" max="1"/>
	              </when>
	              <when value="downsample_to_coverage">
	                  <param name="downsample_to_value" type="integer" label="Coverage to downsample to at any given locus" value="0"/>
	              </when>
	          </conditional>
	      </when>
        </conditional>
        <param name="baq" type="select" label="Type of BAQ calculation to apply in the engine">
          <option value="OFF" selected="True">OFF</option>
          <option value="CALCULATE_AS_NECESSARY">CALCULATE_AS_NECESSARY</option>
          <option value="RECALCULATE">RECALCULATE</option>
        </param>
        <param name="baq_gap_open_penalty" type="float" label="BAQ gap open penalty (Phred Scaled)" value="40" help="Default value is 40. 30 is perhaps better for whole genome call sets."/>
        <param name="use_original_qualities" type="boolean" truevalue="--useOriginalQualities" falsevalue="" label="Use the original base quality scores from the OQ tag" />
        <param name="default_base_qualities" type="integer" label="Value to be used for all base quality scores, when some are missing" value="-1"/>
        <param name="validation_strictness" type="select" label="How strict should we be with validation">
          <option value="STRICT" selected="True">STRICT</option>
          <option value="LENIENT">LENIENT</option>
          <option value="SILENT">SILENT</option>
          <!-- <option value="DEFAULT_STRINGENCY">DEFAULT_STRINGENCY</option> listed in docs, but not valid value...-->
        </param>
        <param name="interval_merging" type="select" label="Interval merging rule">
          <option value="ALL" selected="True">ALL</option>
          <option value="OVERLAPPING_ONLY">OVERLAPPING_ONLY</option>
        </param>
        
        <repeat name="read_group_black_list_repeat" title="Read group black list">
          <conditional name="read_group_black_list_type">
            <param name="read_group_black_list_type_selector" type="select" label="Type of reads read group black list">
              <option value="file" selected="True">Filters in file</option>
              <option value="text">Specify filters as a string</option>
            </param>
            <when value="file">
	          <param name="read_group_black_list" type="data" format="txt" label="Read group black list file" />
	        </when>
            <when value="text">
	          <param name="read_group_black_list" type="text" value="tag:string" label="Read group black list tag:string" />
	        </when>
          </conditional>
        </repeat>
        
        <param name="disable_experimental_low_memory_sharding" type="boolean" truevalue="--disable_experimental_low_memory_sharding" falsevalue="" label="Disable experimental low-memory sharding functionality." checked="False"/>
        <param name="non_deterministic_random_seed" type="boolean" truevalue="--nonDeterministicRandomSeed" falsevalue="" label="Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run" checked="False" />
        
      </when>
    </conditional>
    
    <conditional name="analysis_param_type">
      <param name="analysis_param_type_selector" type="select" label="Basic or Advanced Analysis options">
        <option value="basic" selected="True">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        
        <param name="entropy_threshold" type="float" value="0.15" label="percentage of mismatching base quality scores at a position to be considered having high entropy" />
        <param name="simplify_bam" type="boolean" checked="False" truevalue="-simplifyBAM" falsevalue="" label="Simplify BAM"/>
        <param name="consensus_determination_model" type="select" label="Consensus Determination Model">
          <option value="KNOWNS_ONLY">KNOWNS_ONLY</option>
          <option value="USE_READS" selected="True">USE_READS</option>
          <option value="USE_SW">USE_SW</option>
        </param>
        <param name="max_insert_size_for_movement" type="integer" value="3000" label="Maximum insert size of read pairs that we attempt to realign" />
        <param name="max_positional_move_allowed" type="integer" value="200" label="Maximum positional move in basepairs that a read can be adjusted during realignment" />
        <param name="max_consensuses" type="integer" value="30" label="Max alternate consensuses to try" />
        <param name="max_reads_for_consensuses" type="integer" value="120" label="Max reads (chosen randomly) used for finding the potential alternate consensuses" />
        <param name="max_reads_for_realignment" type="integer" value="20000" label="Max reads allowed at an interval for realignment" />
        <param name="no_original_alignment_tags" type="boolean" checked="False" truevalue="--noOriginalAlignmentTags" falsevalue="" label="Don't output the original cigar or alignment start tags for each realigned read in the output bam"/> 
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bam" name="output_bam" label="${tool.name} on ${on_string} (BAM)" />
    <data format="txt" name="output_log" label="${tool.name} on ${on_string} (log)" />
  </outputs>
  <tests>
      <test>
          <param name="reference_source_selector" value="history" />
          <param name="ref_file" value="phiX.fasta" ftype="fasta" />
          <param name="target_intervals" value="gatk/gatk_realigner_target_creator/gatk_realigner_target_creator_out_1.gatk_interval" ftype="gatk_interval" />
          <param name="input_bam" value="gatk/fake_phiX_reads_1.bam" ftype="bam" />
          <param name="rod_bind_type_selector" value="snps" />
          <param name="rodToIntervalTrackName" />
          <param name="input_rod" value="gatk/fake_phiX_variant_locations.vcf" ftype="vcf" />
          <param name="lod_threshold" value="5.0" />
          <param name="knowns_only" />
          <param name="gatk_param_type_selector" value="basic" />
          <param name="analysis_param_type_selector" value="advanced" />
          <param name="entropy_threshold" value="0.15" />
          <param name="simplify_bam" />
          <param name="consensus_determination_model" value="USE_SW" />
          <param name="max_insert_size_for_movement" value="3000" />
          <param name="max_positional_move_allowed" value="200" />
          <param name="max_consensuses" value="30" />
          <param name="max_reads_for_consensuses" value="120" />
          <param name="max_reads_for_realignment" value="20000" />
          <param name="no_original_alignment_tags" />
          <output name="output_bam" file="gatk/gatk_indel_realigner/gatk_indel_realigner_out_1.bam" ftype="bam" lines_diff="2" /> 
          <output name="output_log" file="gatk/gatk_indel_realigner/gatk_indel_realigner_out_1.log.contains" compare="contains" />
      </test>
  </tests>
  <help>
**What it does**

Performs local realignment of reads based on misalignments due to the presence of indels. Unlike most mappers, this walker uses the full alignment context to determine whether an appropriate alternate reference (i.e. indel) exists and updates SAMRecords accordingly.

For more information on local realignment around indels using the GATK, see this `tool specific page &lt;http://www.broadinstitute.org/gsa/wiki/index.php/Local_realignment_around_indels&gt;`_.

To learn about best practices for variant detection using GATK, see this `overview &lt;http://www.broadinstitute.org/gsa/wiki/index.php/Best_Practice_Variant_Detection_with_the_GATK_v3&gt;`_.

If you encounter errors, please view the `GATK FAQ &lt;http://www.broadinstitute.org/gsa/wiki/index.php/Frequently_Asked_Questions&gt;`_.

------

**Inputs**

GenomeAnalysisTK: IndelRealigner accepts an aligned BAM and a list of intervals to realign as input files.


**Outputs**

The output is in the BAM format.


Go `here &lt;http://www.broadinstitute.org/gsa/wiki/index.php/Input_files_for_the_GATK&gt;`_ for details on GATK file formats.

-------

**Settings**::

 targetIntervals              intervals file output from RealignerTargetCreator
 LODThresholdForCleaning      LOD threshold above which the cleaner will clean
 entropyThreshold             percentage of mismatches at a locus to be considered having high entropy
 out                          Output bam
 bam_compression              Compression level to use for writing BAM files
 disable_bam_indexing         Turn off on-the-fly creation of indices for output BAM files.
 simplifyBAM                  If provided, output BAM files will be simplified to include just key reads for downstream variation discovery analyses (removing duplicates, PF-, non-primary reads), as well stripping all extended tags from the kept reads except the read group identifier
 useOnlyKnownIndels           Don't run 'Smith-Waterman' to generate alternate consenses; use only known indels provided as RODs for constructing the alternate references.
 maxReadsInMemory             max reads allowed to be kept in memory at a time by the SAMFileWriter. Keep it low to minimize memory consumption (but the tool may skip realignment on regions with too much coverage.  If it is too low, it may generate errors during realignment); keep it high to maximize realignment (but make sure to give Java enough memory).
 maxIsizeForMovement          maximum insert size of read pairs that we attempt to realign
 maxPositionalMoveAllowed     maximum positional move in basepairs that a read can be adjusted during realignment
 maxConsensuses               max alternate consensuses to try (necessary to improve performance in deep coverage)
 maxReadsForConsensuses       max reads used for finding the alternate consensuses (necessary to improve performance in deep coverage)
 maxReadsForRealignment       max reads allowed at an interval for realignment; if this value is exceeded, realignment is not attempted and the reads are passed to the output file(s) as-is
 noOriginalAlignmentTags      Don't output the original cigar or alignment start tags for each realigned read in the output bam.
 targetIntervalsAreNotSorted  This tool assumes that the target interval list is sorted; if the list turns out to be unsorted, it will throw an exception.  Use this argument when your interval list is not sorted to instruct the Realigner to first sort it in memory.

------

**Citation**

For the underlying tool, please cite `DePristo MA, Banks E, Poplin R, Garimella KV, Maguire JR, Hartl C, Philippakis AA, del Angel G, Rivas MA, Hanna M, McKenna A, Fennell TJ, Kernytsky AM, Sivachenko AY, Cibulskis K, Gabriel SB, Altshuler D, Daly MJ. A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nat Genet. 2011 May;43(5):491-8. &lt;http://www.ncbi.nlm.nih.gov/pubmed/21478889&gt;`_

If you use this tool in Galaxy, please cite Blankenberg D, et al. *In preparation.*

  </help>
</tool>
